{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sargi\\\\Desktop\\\\Task\\\\TaskRepo\\\\client\\\\src\\\\Components\\\\AudioPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AudioPlayer({\n  videoUrl\n}) {\n  _s();\n  const [audioUrl, setAudioUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFetchAudio = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(videoUrl)}`);\n      if (response.ok) {\n        const audioBlob = await response.blob();\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n      } else {\n        console.error('Failed to fetch audio');\n        alert('Failed to fetch audio'); // Show error feedback\n      }\n    } catch (error) {\n      console.error('Error fetching audio:', error);\n      alert('Error fetching audio');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchAudio,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Load Audio'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioUrl,\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: audioUrl,\n        download: \"clip.mp3\",\n        className: \"download-button\",\n        children: \"Download Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioPlayer, \"5epB9huaovTAa93G0zCn3o3Ecbk=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","videoUrl","_s","audioUrl","setAudioUrl","loading","setLoading","handleFetchAudio","response","fetch","encodeURIComponent","ok","audioBlob","blob","URL","createObjectURL","console","error","alert","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","href","download","className","_c","$RefreshReg$"],"sources":["C:/Users/sargi/Desktop/Task/TaskRepo/client/src/Components/AudioPlayer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction AudioPlayer({ videoUrl }) {\r\n  const [audioUrl, setAudioUrl] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFetchAudio = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(videoUrl)}`);\r\n      if (response.ok) {\r\n        const audioBlob = await response.blob();\r\n        const audioUrl = URL.createObjectURL(audioBlob);\r\n        setAudioUrl(audioUrl);\r\n      } else {\r\n        console.error('Failed to fetch audio');\r\n        alert('Failed to fetch audio'); // Show error feedback\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching audio:', error);\r\n      alert('Error fetching audio');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleFetchAudio} disabled={loading}>\r\n        {loading ? 'Loading...' : 'Load Audio'}\r\n      </button>\r\n      {audioUrl && (\r\n        <div>\r\n          <audio controls src={audioUrl}>\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <a href={audioUrl} download=\"clip.mp3\" className=\"download-button\">\r\n            Download Audio\r\n          </a>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AudioPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCC,kBAAkB,CAACT,QAAQ,CAAE,EAAC,CAAC;MACrG,IAAIO,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACvC,MAAMV,QAAQ,GAAGW,GAAG,CAACC,eAAe,CAACH,SAAS,CAAC;QAC/CR,WAAW,CAACD,QAAQ,CAAC;MACvB,CAAC,MAAM;QACLa,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;QACtCC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;MAClC;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,KAAK,CAAC,sBAAsB,CAAC;IAC/B;IACAZ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAQuB,OAAO,EAAEb,gBAAiB;MAACc,QAAQ,EAAEhB,OAAQ;MAAAc,QAAA,EAClDd,OAAO,GAAG,YAAY,GAAG;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACRtB,QAAQ,iBACPN,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAO6B,QAAQ;QAACC,GAAG,EAAExB,QAAS;QAAAgB,QAAA,EAAC;MAE/B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACR5B,OAAA;QAAG+B,IAAI,EAAEzB,QAAS;QAAC0B,QAAQ,EAAC,UAAU;QAACC,SAAS,EAAC,iBAAiB;QAAAX,QAAA,EAAC;MAEnE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN;EAAA,eACD,CAAC;AAEP;AAACvB,EAAA,CAxCQF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}