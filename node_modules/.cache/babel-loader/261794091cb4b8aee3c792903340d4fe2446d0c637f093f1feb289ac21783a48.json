{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sargi\\\\Desktop\\\\Task\\\\TaskRepo\\\\ClientRepo\\\\src\\\\Components\\\\AudioPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AudioPlayer() {\n  _s();\n  const [audioUrl, setAudioUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(''); // This will hold the fetched video URL.\n\n  useEffect(() => {\n    // Fetch the stored video URL from the server.\n    const fetchVideoUrl = async () => {\n      const response = await fetch('http://localhost:3001/video');\n      if (response.ok) {\n        const data = await response.json();\n        setVideoUrl(data.url); // Assuming the URL is directly in 'url' key.\n        // Set the initial audio URL to the GCS file location with a cache-busting query\n        setAudioUrl(`https://storage.googleapis.com/marcosargiottitask/audio-buffer.mp3?timestamp=${new Date().getTime()}`);\n      }\n    };\n    fetchVideoUrl();\n  }, []);\n  const handleAudioExtraction = async () => {\n    if (!videoUrl) {\n      alert('Video URL is not available.');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Trigger the backend process (which overwrites the GCS file)\n      await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(videoUrl)}`);\n      // Force update the audio URL to fetch the latest audio file.\n      setAudioUrl(`https://storage.googleapis.com/marcosargiottitask/audio-buffer.mp3?timestamp=${new Date().getTime()}`);\n      alert('Audio has been processed and updated.');\n    } catch (error) {\n      console.error('Error processing audio:', error);\n      alert('Error processing audio');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAudioExtraction,\n        disabled: loading,\n        className: \"border-2 border-black py-2 px-3 m-2 roboto-medium rounded-md bg-white tracking-wider\",\n        children: loading ? 'Processing...' : 'Process Audio'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: audioUrl,\n          children: \"Your browser does not support the audio element.\"\n        }, audioUrl, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white text-center\",\n      children: \"To download the audio clip press on the options button of the player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioPlayer, \"ZzVPy1RUwj4pjpCHm2P8lS4EYt4=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","_s","audioUrl","setAudioUrl","loading","setLoading","videoUrl","setVideoUrl","fetchVideoUrl","response","fetch","ok","data","json","url","Date","getTime","handleAudioExtraction","alert","encodeURIComponent","error","console","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/sargi/Desktop/Task/TaskRepo/ClientRepo/src/Components/AudioPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction AudioPlayer() {\r\n  const [audioUrl, setAudioUrl] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [videoUrl, setVideoUrl] = useState(''); // This will hold the fetched video URL.\r\n\r\n  useEffect(() => {\r\n    // Fetch the stored video URL from the server.\r\n    const fetchVideoUrl = async () => {\r\n      const response = await fetch('http://localhost:3001/video');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setVideoUrl(data.url); // Assuming the URL is directly in 'url' key.\r\n        // Set the initial audio URL to the GCS file location with a cache-busting query\r\n        setAudioUrl(`https://storage.googleapis.com/marcosargiottitask/audio-buffer.mp3?timestamp=${new Date().getTime()}`);\r\n      }\r\n    };\r\n\r\n    fetchVideoUrl();\r\n  }, []);\r\n\r\n  const handleAudioExtraction = async () => {\r\n    if (!videoUrl) {\r\n      alert('Video URL is not available.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Trigger the backend process (which overwrites the GCS file)\r\n      await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(videoUrl)}`);\r\n      // Force update the audio URL to fetch the latest audio file.\r\n      setAudioUrl(`https://storage.googleapis.com/marcosargiottitask/audio-buffer.mp3?timestamp=${new Date().getTime()}`);\r\n      alert('Audio has been processed and updated.');\r\n    } catch (error) {\r\n      console.error('Error processing audio:', error);\r\n      alert('Error processing audio');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-center justify-center mt-8\">\r\n        <button onClick={handleAudioExtraction} disabled={loading} className=\"border-2 border-black py-2 px-3 m-2 roboto-medium rounded-md bg-white tracking-wider\">\r\n          {loading ? 'Processing...' : 'Process Audio'}\r\n        </button>\r\n        {audioUrl && (\r\n          <div className=\"flex flex-col items-center justify-center\">\r\n            <audio controls src={audioUrl} key={audioUrl}>\r\n              Your browser does not support the audio element.\r\n            </audio>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className='text-white text-center'>To download the audio clip press on the options button of the player</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AudioPlayer;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}