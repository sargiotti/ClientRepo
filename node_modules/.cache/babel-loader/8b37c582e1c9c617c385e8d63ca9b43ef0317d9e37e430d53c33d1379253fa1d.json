{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sargi\\\\Desktop\\\\Task\\\\TaskRepo\\\\client\\\\src\\\\Components\\\\VideoContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoContainer() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [metadata, setMetadata] = useState(null);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const fetchStoredUrl = async () => {\n      const response = await fetch('http://localhost:3001/video');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.url) {\n          setUrl(data.url);\n          fetchMetadata(data.url);\n        }\n      }\n    };\n    fetchStoredUrl();\n  }, []);\n  const fetchMetadata = async videoUrl => {\n    const response = await fetch(`http://localhost:3001/video/metadata?url=${encodeURIComponent(videoUrl)}`);\n    if (response.ok) {\n      const metadata = await response.json();\n      setMetadata(metadata);\n      console.log('Metadata fetched successfully');\n    } else {\n      console.log('Failed to fetch metadata');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/video', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url\n        })\n      });\n      if (response.ok) {\n        console.log('URL submitted successfully');\n        setStatus('URL Submitted successfully');\n        fetchMetadata(url);\n      } else {\n        console.error('Submission failed');\n        setStatus('Submission failed');\n      }\n    } catch (error) {\n      console.error('Error submitting the URL:', error);\n      setStatus(`Error submitting the URL: ${error}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-24 flex items-center justify-center mt-12\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"m-2 p-2 text-lg h-[40px] w-[300px] roboto-medium\",\n          value: url,\n          placeholder: \"URL of your .MP4 Video\",\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-2 border-black py-1 px-3 m-2 roboto-medium rounded-md bg-white tracking-wider\",\n          type: \"submit\",\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center montserrat-semibold text-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center mt-12 \",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", metadata.duration, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Height: \", metadata.videoHeight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(VideoContainer, \"fC9erT2Z+JRU5AExxuiUYtlIKak=\");\n_c = VideoContainer;\nexport default VideoContainer;\nvar _c;\n$RefreshReg$(_c, \"VideoContainer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoContainer","_s","url","setUrl","metadata","setMetadata","status","setStatus","fetchStoredUrl","response","fetch","ok","data","json","fetchMetadata","videoUrl","encodeURIComponent","console","log","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","error","children","className","onSubmit","type","value","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","duration","videoHeight","_c","$RefreshReg$"],"sources":["C:/Users/sargi/Desktop/Task/TaskRepo/client/src/Components/VideoContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction VideoContainer() {\r\n  const [url, setUrl] = useState('');\r\n  const [metadata, setMetadata] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchStoredUrl = async () => {\r\n      const response = await fetch('http://localhost:3001/video');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.url) {\r\n          setUrl(data.url);\r\n          fetchMetadata(data.url);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchStoredUrl();\r\n  }, []);\r\n\r\n  const fetchMetadata = async (videoUrl) => {\r\n    const response = await fetch(`http://localhost:3001/video/metadata?url=${encodeURIComponent(videoUrl)}`);\r\n    if (response.ok) {\r\n      const metadata = await response.json();\r\n      setMetadata(metadata);\r\n      console.log('Metadata fetched successfully');\r\n    } else {\r\n      console.log('Failed to fetch metadata');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:3001/video', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ url }),\r\n      });\r\n      if (response.ok) {\r\n        console.log('URL submitted successfully');\r\n        setStatus('URL Submitted successfully');\r\n        fetchMetadata(url);\r\n      } else {\r\n        console.error('Submission failed');\r\n        setStatus('Submission failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting the URL:', error);\r\n      setStatus(`Error submitting the URL: ${error}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-24 flex items-center justify-center mt-12\">\r\n        <form onSubmit={handleSubmit} className=\"flex items-center\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"m-2 p-2 text-lg h-[40px] w-[300px] roboto-medium\"\r\n            value={url}\r\n            placeholder=\"URL of your .MP4 Video\"\r\n            onChange={(e) => setUrl(e.target.value)}\r\n          />\r\n          <button className=\"border-2 border-black py-1 px-3 m-2 roboto-medium rounded-md bg-white tracking-wider\" type=\"submit\">\r\n            SUBMIT\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"flex justify-center montserrat-semibold text-xl\">\r\n        <p>{status}</p>\r\n      </div>\r\n      {metadata && (\r\n        <div className=\"flex flex-col items-center justify-center mt-12 \">\r\n          <p>Duration: {metadata.duration} seconds</p>\r\n          <p>Height: {metadata.videoHeight}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VideoContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}