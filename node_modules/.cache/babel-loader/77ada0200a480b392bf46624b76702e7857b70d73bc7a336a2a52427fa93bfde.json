{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sargi\\\\Desktop\\\\Task\\\\TaskRepo\\\\ClientRepo\\\\src\\\\Components\\\\FirstFrame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FirstFrame() {\n  _s();\n  const [frameUrl, setFrameUrl] = useState('');\n  const [ocrResults, setOcrResults] = useState([]);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [isLoadingFrame, setIsLoadingFrame] = useState(false);\n  const [isPerformingOCR, setIsPerformingOCR] = useState(false);\n  useEffect(() => {\n    async function fetchStoredUrl() {\n      const response = await fetch('http://localhost:3001/video');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.url) {\n          setVideoUrl(data.url);\n        }\n      }\n    }\n    fetchStoredUrl();\n  }, []);\n  const handleFetchFirstFrame = async url => {\n    setIsLoadingFrame(true);\n    const response = await fetch(`/video/first-frame?url=${encodeURIComponent(url)}`);\n    if (response.ok) {\n      const blob = await response.blob();\n      const imageUrl = URL.createObjectURL(blob);\n      setFrameUrl(imageUrl);\n    } else {\n      alert('Failed to fetch the first frame.');\n    }\n    setIsLoadingFrame(false);\n  };\n  const performOCR = async () => {\n    setIsPerformingOCR(true);\n    const response = await fetch('/performOCR', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        imageUri: frameUrl\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      setOcrResults(data);\n    } else {\n      alert('Failed to perform OCR.');\n    }\n    setIsPerformingOCR(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"border-2 border-black py-2 px-3 m-2 roboto-medium rounded-md bg-white tracking-wider\",\n      onClick: () => handleFetchFirstFrame(videoUrl),\n      disabled: isLoadingFrame,\n      children: isLoadingFrame ? 'Fetching Frame...' : 'Get First Frame as Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), frameUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"w-1/4\",\n        src: frameUrl,\n        alt: \"First frame of the video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"border-2 border-black py-1 px-2 m-2 roboto-medium rounded-md bg-white tracking-wider\",\n        href: frameUrl,\n        download: \"first-frame.jpg\",\n        children: \"Download First Frame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), !isPerformingOCR && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border-2 border-black py-1 px-2 m-2 roboto-medium rounded-md bg-white tracking-wider\",\n        onClick: performOCR,\n        children: \"Perform OCR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), isPerformingOCR && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Performing OCR...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 27\n    }, this), ocrResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"OCR Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), ocrResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result.description\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(FirstFrame, \"moUqhjSojGIxZ0gJC5GmR4RYkV4=\");\n_c = FirstFrame;\nexport default FirstFrame;\nvar _c;\n$RefreshReg$(_c, \"FirstFrame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FirstFrame","_s","frameUrl","setFrameUrl","ocrResults","setOcrResults","videoUrl","setVideoUrl","isLoadingFrame","setIsLoadingFrame","isPerformingOCR","setIsPerformingOCR","fetchStoredUrl","response","fetch","ok","data","json","url","handleFetchFirstFrame","encodeURIComponent","blob","imageUrl","URL","createObjectURL","alert","performOCR","method","headers","body","JSON","stringify","imageUri","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","href","download","length","map","result","index","description","_c","$RefreshReg$"],"sources":["C:/Users/sargi/Desktop/Task/TaskRepo/ClientRepo/src/Components/FirstFrame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction FirstFrame() {\r\n  const [frameUrl, setFrameUrl] = useState('');\r\n  const [ocrResults, setOcrResults] = useState([]);\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [isLoadingFrame, setIsLoadingFrame] = useState(false);\r\n  const [isPerformingOCR, setIsPerformingOCR] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchStoredUrl() {\r\n      const response = await fetch('http://localhost:3001/video');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.url) {\r\n          setVideoUrl(data.url);\r\n        }\r\n      }\r\n    }\r\n\r\n    fetchStoredUrl();\r\n  }, []);\r\n\r\n  const handleFetchFirstFrame = async (url) => {\r\n    setIsLoadingFrame(true);\r\n    const response = await fetch(`/video/first-frame?url=${encodeURIComponent(url)}`);\r\n    if (response.ok) {\r\n      const blob = await response.blob();\r\n      const imageUrl = URL.createObjectURL(blob);\r\n      setFrameUrl(imageUrl);\r\n    } else {\r\n      alert('Failed to fetch the first frame.');\r\n    }\r\n    setIsLoadingFrame(false);\r\n  };\r\n\r\n  const performOCR = async () => {\r\n    setIsPerformingOCR(true);\r\n    const response = await fetch('/performOCR', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ imageUri: frameUrl }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      setOcrResults(data);\r\n    } else {\r\n      alert('Failed to perform OCR.');\r\n    }\r\n    setIsPerformingOCR(false);\r\n  };\r\n\r\n  return (\r\n    <div className='flex flex-col items-center justify-center mt-12'>\r\n      <button\r\n        className='border-2 border-black py-2 px-3 m-2 roboto-medium rounded-md bg-white tracking-wider'\r\n        onClick={() => handleFetchFirstFrame(videoUrl)}\r\n        disabled={isLoadingFrame}\r\n      >\r\n        {isLoadingFrame ? 'Fetching Frame...' : 'Get First Frame as Image'}\r\n      </button>\r\n\r\n      {frameUrl && (\r\n        <>\r\n          <img className='w-1/4' src={frameUrl} alt=\"First frame of the video\" />\r\n          <a\r\n            className='border-2 border-black py-1 px-2 m-2 roboto-medium rounded-md bg-white tracking-wider'\r\n            href={frameUrl}\r\n            download=\"first-frame.jpg\"\r\n          >\r\n            Download First Frame\r\n          </a>\r\n          {!isPerformingOCR && (\r\n            <button\r\n              className='border-2 border-black py-1 px-2 m-2 roboto-medium rounded-md bg-white tracking-wider'\r\n              onClick={performOCR}\r\n            >\r\n              Perform OCR\r\n            </button>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {isPerformingOCR && <p>Performing OCR...</p>}\r\n\r\n      {ocrResults.length > 0 && (\r\n        <div>\r\n          <h3>OCR Results:</h3>\r\n          {ocrResults.map((result, index) => (\r\n            <p key={index}>{result.description}</p>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FirstFrame;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}