{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sargi\\\\Desktop\\\\Task\\\\TaskRepo\\\\client\\\\src\\\\Components\\\\AudioPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioPlayer({\n  videoUrl\n}) {\n  _s();\n  const [audioUrl, setAudioUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchStoredUrl = async () => {\n      const response = await fetch('http://localhost:3001/video');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.url) {\n          setUrl(data.url);\n          fetchMetadata(data.url);\n        }\n      }\n    };\n    fetchStoredUrl();\n  }, []);\n  const handleFetchAudio = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(videoUrl)}`);\n      console.log(videoUrl);\n      if (response.ok) {\n        const audioBlob = await response.blob();\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n      } else {\n        console.error('Failed to fetch audio');\n        alert('Failed to fetch audio'); // Show error feedback\n      }\n    } catch (error) {\n      console.error('Error fetching audio:', error);\n      alert('Error fetching audio');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"p-3 m-3 bg-white border-2 border-black rounded-md\",\n      onClick: handleFetchAudio,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Load 15 sec of Audio'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioUrl,\n        className: \"\",\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: audioUrl,\n        download: \"clip.mp3\",\n        className: \"p-3 m-3 bg-white border-2 border-black rounded-md\",\n        children: \"Download Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioPlayer, \"yMtoFxI7MXw9FBuyDz77rtPDOLQ=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AudioPlayer","videoUrl","_s","audioUrl","setAudioUrl","loading","setLoading","fetchStoredUrl","response","fetch","ok","data","json","url","setUrl","fetchMetadata","handleFetchAudio","encodeURIComponent","console","log","audioBlob","blob","URL","createObjectURL","error","alert","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","href","download","_c","$RefreshReg$"],"sources":["C:/Users/sargi/Desktop/Task/TaskRepo/client/src/Components/AudioPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction AudioPlayer({ videoUrl }) {\r\n  const [audioUrl, setAudioUrl] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchStoredUrl = async () => {\r\n      const response = await fetch('http://localhost:3001/video');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.url) {\r\n          setUrl(data.url);\r\n          fetchMetadata(data.url);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchStoredUrl();\r\n  }, []);\r\n  const handleFetchAudio = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(videoUrl)}`);\r\n      console.log(videoUrl)\r\n      if (response.ok) {\r\n        const audioBlob = await response.blob();\r\n        const audioUrl = URL.createObjectURL(audioBlob);\r\n        setAudioUrl(audioUrl);\r\n      } else {\r\n        console.error('Failed to fetch audio');\r\n        alert('Failed to fetch audio'); // Show error feedback\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching audio:', error);\r\n      alert('Error fetching audio');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className='flex flex-col items-center justify-center mt-8'>\r\n      <button className='p-3 m-3 bg-white border-2 border-black rounded-md' onClick={handleFetchAudio} disabled={loading}>\r\n        {loading ? 'Loading...' : 'Load 15 sec of Audio'}\r\n      </button>\r\n      {audioUrl && (\r\n        <div className='flex flex-col items-center justify-center'>\r\n          <audio controls src={audioUrl} className=''>\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <a href={audioUrl} download=\"clip.mp3\" className=\"p-3 m-3 bg-white border-2 border-black rounded-md\">\r\n            Download Audio\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AudioPlayer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}