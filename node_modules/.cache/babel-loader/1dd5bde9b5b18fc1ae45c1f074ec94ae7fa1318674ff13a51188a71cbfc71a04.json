{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sargi\\\\Desktop\\\\Task\\\\TaskRepo\\\\ClientRepo\\\\src\\\\Components\\\\AudioPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AudioPlayer() {\n  _s();\n  const [audioUrl, setAudioUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // Set the initial audio URL to the GCS file location\n    setAudioUrl('https://storage.googleapis.com/marcosargiottitask/audio-buffer.mp3');\n  }, []);\n  const handleAudioExtraction = async () => {\n    setLoading(true);\n    try {\n      // Fetch the latest video URL from the server\n      const urlResponse = await fetch('http://localhost:3001/video');\n      if (urlResponse.ok) {\n        const {\n          url\n        } = await urlResponse.json();\n        // Trigger audio processing with the latest video URL\n        const audioResponse = await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(url)}`);\n        if (audioResponse.ok) {\n          // Update the audio URL to reflect the new audio\n          await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(urlResponse)}`);\n          // Force update the audio URL to fetch the latest audio file.\n          setAudioUrl(`https://storage.googleapis.com/marcosargiottitask/audio-buffer.mp3?timestamp=${new Date().getTime()}`);\n          alert('Audio has been processed and updated.');\n        } else {\n          console.error('Failed to process audio');\n          alert('Failed to process audio');\n        }\n      } else {\n        console.error('Failed to fetch the latest video URL');\n        alert('Failed to fetch the latest video URL');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error during the process');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAudioExtraction,\n        disabled: loading,\n        className: \"border-2 border-black py-2 px-3 m-2 roboto-medium rounded-md bg-white tracking-wider\",\n        children: loading ? 'Processing...' : 'Process Audio'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: audioUrl,\n          children: \"Your browser does not support the audio element.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white text-center\",\n      children: \"To download the audio clip press on the options button of the player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AudioPlayer, \"yMtoFxI7MXw9FBuyDz77rtPDOLQ=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","_s","audioUrl","setAudioUrl","loading","setLoading","handleAudioExtraction","urlResponse","fetch","ok","url","json","audioResponse","encodeURIComponent","Date","getTime","alert","console","error","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/sargi/Desktop/Task/TaskRepo/ClientRepo/src/Components/AudioPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction AudioPlayer() {\r\n  const [audioUrl, setAudioUrl] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Set the initial audio URL to the GCS file location\r\n    setAudioUrl('https://storage.googleapis.com/marcosargiottitask/audio-buffer.mp3');\r\n  }, []);\r\n\r\n  const handleAudioExtraction = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Fetch the latest video URL from the server\r\n      const urlResponse = await fetch('http://localhost:3001/video');\r\n      if (urlResponse.ok) {\r\n        const { url } = await urlResponse.json();\r\n        // Trigger audio processing with the latest video URL\r\n        const audioResponse = await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(url)}`);\r\n        if (audioResponse.ok) {\r\n          // Update the audio URL to reflect the new audio\r\n          await fetch(`http://localhost:3001/video/audio?url=${encodeURIComponent(urlResponse)}`);\r\n          // Force update the audio URL to fetch the latest audio file.\r\n          setAudioUrl(`https://storage.googleapis.com/marcosargiottitask/audio-buffer.mp3?timestamp=${new Date().getTime()}`);\r\n          alert('Audio has been processed and updated.');\r\n        } else {\r\n          console.error('Failed to process audio');\r\n          alert('Failed to process audio');\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch the latest video URL');\r\n        alert('Failed to fetch the latest video URL');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('Error during the process');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-center justify-center mt-8\">\r\n        <button onClick={handleAudioExtraction} disabled={loading} className=\"border-2 border-black py-2 px-3 m-2 roboto-medium rounded-md bg-white tracking-wider\">\r\n          {loading ? 'Processing...' : 'Process Audio'}\r\n        </button>\r\n        {audioUrl && (\r\n          <div className=\"flex flex-col items-center justify-center\">\r\n            <audio controls src={audioUrl}>\r\n              Your browser does not support the audio element.\r\n            </audio>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className='text-white text-center'>To download the audio clip press on the options button of the player</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AudioPlayer;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd;IACAQ,WAAW,CAAC,oEAAoE,CAAC;EACnF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAME,WAAW,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC9D,IAAID,WAAW,CAACE,EAAE,EAAE;QAClB,MAAM;UAAEC;QAAI,CAAC,GAAG,MAAMH,WAAW,CAACI,IAAI,CAAC,CAAC;QACxC;QACA,MAAMC,aAAa,GAAG,MAAMJ,KAAK,CAAE,yCAAwCK,kBAAkB,CAACH,GAAG,CAAE,EAAC,CAAC;QACrG,IAAIE,aAAa,CAACH,EAAE,EAAE;UACpB;UACA,MAAMD,KAAK,CAAE,yCAAwCK,kBAAkB,CAACN,WAAW,CAAE,EAAC,CAAC;UACvF;UACAJ,WAAW,CAAE,gFAA+E,IAAIW,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAE,EAAC,CAAC;UACnHC,KAAK,CAAC,uCAAuC,CAAC;QAChD,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;UACxCF,KAAK,CAAC,yBAAyB,CAAC;QAClC;MACF,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;QACrDF,KAAK,CAAC,sCAAsC,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BF,KAAK,CAAC,0BAA0B,CAAC;IACnC;IACAX,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAKuB,SAAS,EAAC,gDAAgD;MAAAD,QAAA,gBAC7DtB,OAAA;QAAQwB,OAAO,EAAEf,qBAAsB;QAACgB,QAAQ,EAAElB,OAAQ;QAACgB,SAAS,EAAC,sFAAsF;QAAAD,QAAA,EACxJf,OAAO,GAAG,eAAe,GAAG;MAAe;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,EACRxB,QAAQ,iBACPL,OAAA;QAAKuB,SAAS,EAAC,2CAA2C;QAAAD,QAAA,eACxDtB,OAAA;UAAO8B,QAAQ;UAACC,GAAG,EAAE1B,QAAS;UAAAiB,QAAA,EAAC;QAE/B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN7B,OAAA;MAAGuB,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EAAC;IAAoE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eAC9G,CAAC;AAEP;AAACzB,EAAA,CAxDQD,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA0DpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}