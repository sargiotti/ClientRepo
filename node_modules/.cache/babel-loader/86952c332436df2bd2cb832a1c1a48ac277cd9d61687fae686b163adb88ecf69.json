{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sargi\\\\Desktop\\\\Task\\\\TaskRepo\\\\ClientRepo\\\\src\\\\Components\\\\FirstFrame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FirstFrame() {\n  _s();\n  const [frameUrl, setFrameUrl] = useState('');\n  const handleFetchFirstFrame = async videoUrl => {\n    const response = await fetch(`/video/first-frame?url=${encodeURIComponent(videoUrl)}`);\n    if (response.ok) {\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      setFrameUrl(url);\n    } else {\n      alert('Failed to fetch the first frame.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: frameUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: frameUrl,\n        alt: \"First frame of the video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: frameUrl,\n        download: \"first-frame.jpg\",\n        children: \"Download First Frame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(FirstFrame, \"tj///Rku4mlfk9n09xt7/R5poDI=\");\n_c = FirstFrame;\nexport default FirstFrame;\nvar _c;\n$RefreshReg$(_c, \"FirstFrame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FirstFrame","_s","frameUrl","setFrameUrl","handleFetchFirstFrame","videoUrl","response","fetch","encodeURIComponent","ok","blob","url","URL","createObjectURL","alert","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","download","_c","$RefreshReg$"],"sources":["C:/Users/sargi/Desktop/Task/TaskRepo/ClientRepo/src/Components/FirstFrame.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction FirstFrame() {\r\n  const [frameUrl, setFrameUrl] = useState('');\r\n\r\n  const handleFetchFirstFrame = async (videoUrl) => {\r\n    const response = await fetch(`/video/first-frame?url=${encodeURIComponent(videoUrl)}`);\r\n    if (response.ok) {\r\n      const blob = await response.blob();\r\n      const url = URL.createObjectURL(blob);\r\n      setFrameUrl(url);\r\n    } else {\r\n      alert('Failed to fetch the first frame.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {frameUrl && (\r\n        <>\r\n          <img src={frameUrl} alt=\"First frame of the video\" />\r\n          <a href={frameUrl} download=\"first-frame.jpg\">Download First Frame</a>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FirstFrame;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,qBAAqB,GAAG,MAAOC,QAAQ,IAAK;IAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,0BAAyBC,kBAAkB,CAACH,QAAQ,CAAE,EAAC,CAAC;IACtF,IAAIC,QAAQ,CAACG,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;MACrCP,WAAW,CAACQ,GAAG,CAAC;IAClB,CAAC,MAAM;MACLG,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,EACGb,QAAQ,iBACPL,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA;QAAKmB,GAAG,EAAEd,QAAS;QAACe,GAAG,EAAC;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDxB,OAAA;QAAGyB,IAAI,EAAEpB,QAAS;QAACqB,QAAQ,EAAC,iBAAiB;QAAAR,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACtE;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAxBQD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA0BnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}